@startuml
title Authorization token with auth_code
' autonumber
skinparam ParticipantPadding 100
skinparam BoxPadding 20

participant web

box K8S_ZONE
participant bff_web_api
participant authorization_api
database k8s_redis
end box

activate web
web -> bff_web_api : /api/v1/auth/token

' activate authorization_api
note left
    Reuqest header
    Content-Type: application/json

    Request body
    - auth_code: xxxxxx
end note
activate bff_web_api

bff_web_api -> bff_web_api : validate request
bff_web_api -> authorization_api : /api/v1/oauth/token
activate authorization_api
note left
    
    Request header
    Content-Type: application/x-www-form-urlencoded

    Request body
    - auth_code

    note: 
    - handler late limit (brute force attack)

end note
authorization_api -> authorization_api : validate request
authorization_api -> k8s_redis : check auth_code from k8s_redis
activate k8s_redis
k8s_redis --> authorization_api: return redis object
note right

    Key:
    - auth_code

    Redis object
    - user_id
    - scope
end note
deactivate k8s_redis
authorization_api -> authorization_api : generate JWT Token with private key
note left
    Access token:
    {
        header
        - alg: rsa256
        - typ: JWT

        payload
        - iss
        - jti
        - user_id
        - iat
        - exp
        - roles

        signature
    }

end note
authorization_api -> k8s_redis : put user session into k8s_redis
activate k8s_redis
note left
    ttl: 300000 milliseconds (5 min)

    Key: user_id:xxxxx

    Redis object value:
    - access_token
    - refrech_token
end note
k8s_redis -> k8s_redis: save data
k8s_redis --> authorization_api
deactivate k8s_redis
' alt#Gold #LightBlue success
authorization_api --> bff_web_api : return

bff_web_api --> web : return
note right
    Response header
    Content-Type: application/json

    Response body
    - accessToken
    - RefreshToken

end note
deactivate authorization_api
|||
deactivate bff_web_api
deactivate web
@enduml